generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextIndex", "fullTextSearch"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Article {
  id                Int              @id @default(autoincrement())
  created_at        DateTime         @default(now())
  updated_at        DateTime         @updatedAt
  title             String
  summery           String
  content           String
  read_time_minutes String
  author            User             @relation(fields: [authorId], references: [id])
  authorId          Int
  image_url         String?
  tags              TagsOnArticles[]
  comments          Comment[]

  @@fulltext([title])
}

model Comment {
  id         Int      @id @default(autoincrement())
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  last_name  String
  first_name String
  content    String
  email      String
  article    Article  @relation(fields: [articleId], references: [id])
  articleId  Int
}

model Tag {
  id         Int              @id @default(autoincrement())
  created_at DateTime         @default(now())
  updated_at DateTime         @updatedAt
  name       String
  articles   TagsOnArticles[]

  @@fulltext([name])
}

model TagsOnArticles {
  tag       Tag     @relation(fields: [tagId], references: [id])
  tagId     Int
  article   Article @relation(fields: [articleId], references: [id])
  articleId Int

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@id([tagId, articleId])
}

model User {
  id            Int            @id @default(autoincrement())
  email         String         @unique
  created_at    DateTime       @default(now())
  first_name    String?
  image_url     String?
  last_name     String?
  phone_number  String
  updated_at    DateTime       @updatedAt
  username      String
  password      String
  notifications Notification[]
  articles      Article[]

  @@fulltext([username])
}

model Notification {
  id          Int      @id @default(autoincrement())
  title       String?
  image_url   String?
  is_seen     Boolean  @default(false)
  created_at  DateTime @default(now())
  description String
  updated_at  DateTime @updatedAt
  user        User     @relation(fields: [userId], references: [id])
  userId      Int
}
